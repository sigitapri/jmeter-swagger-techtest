<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">petstore.swagger.io</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="randomName" elementType="Argument">
              <stringProp name="Argument.name">randomName</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,randomName)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Create User" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Generate Random Name" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def firstNames = [
    &quot;John&quot;, &quot;Emily&quot;, &quot;Michael&quot;, &quot;Sarah&quot;, &quot;David&quot;, &quot;Anna&quot;, &quot;Robert&quot;, &quot;Jessica&quot;,
    &quot;Daniel&quot;, &quot;Sophia&quot;, &quot;Matthew&quot;, &quot;Olivia&quot;, &quot;James&quot;, &quot;Ava&quot;, &quot;William&quot;, &quot;Mia&quot;,
    &quot;Ethan&quot;, &quot;Isabella&quot;, &quot;Alexander&quot;, &quot;Amelia&quot;, &quot;Benjamin&quot;, &quot;Harper&quot;, &quot;Lucas&quot;, &quot;Lily&quot;,
    &quot;Noah&quot;, &quot;Chloe&quot;, &quot;Mason&quot;, &quot;Ella&quot;, &quot;Logan&quot;, &quot;Grace&quot;, &quot;Henry&quot;, &quot;Victoria&quot;,
    &quot;Samuel&quot;, &quot;Hannah&quot;, &quot;Jacob&quot;, &quot;Natalie&quot;, &quot;Ryan&quot;, &quot;Zoe&quot;, &quot;Liam&quot;, &quot;Stella&quot;
]

def lastNames = [
    &quot;Smith&quot;, &quot;Johnson&quot;, &quot;Brown&quot;, &quot;Taylor&quot;, &quot;Anderson&quot;, &quot;Thomas&quot;, &quot;Jackson&quot;, &quot;White&quot;,
    &quot;Harris&quot;, &quot;Martin&quot;, &quot;Thompson&quot;, &quot;Garcia&quot;, &quot;Martinez&quot;, &quot;Robinson&quot;, &quot;Clark&quot;, &quot;Rodriguez&quot;,
    &quot;Lewis&quot;, &quot;Lee&quot;, &quot;Walker&quot;, &quot;Hall&quot;, &quot;Allen&quot;, &quot;Young&quot;, &quot;Hernandez&quot;, &quot;King&quot;,
    &quot;Wright&quot;, &quot;Lopez&quot;, &quot;Hill&quot;, &quot;Scott&quot;, &quot;Green&quot;, &quot;Adams&quot;, &quot;Baker&quot;, &quot;Nelson&quot;,
    &quot;Carter&quot;, &quot;Mitchell&quot;, &quot;Perez&quot;, &quot;Roberts&quot;, &quot;Turner&quot;, &quot;Phillips&quot;, &quot;Campbell&quot;, &quot;Parker&quot;
]

def rand = new Random()
def firstName = firstNames[rand.nextInt(firstNames.size())]
def lastName  = lastNames[rand.nextInt(lastNames.size())]
def fullName  = &quot;${firstName}${lastName}&quot;

vars.put(&quot;firstName&quot;, firstName)
vars.put(&quot;lastName&quot;, lastName)
vars.put(&quot;fullName&quot;, fullName)
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: 0,&#xd;
  &quot;username&quot;: &quot;${fullName}&quot;,&#xd;
  &quot;firstName&quot;: &quot;usman&quot;,&#xd;
  &quot;lastName&quot;: &quot;harun&quot;,&#xd;
  &quot;email&quot;: &quot;email@mail.com&quot;,&#xd;
  &quot;password&quot;: &quot;123123!&quot;,&#xd;
  &quot;phone&quot;: &quot;01824123&quot;,&#xd;
  &quot;userStatus&quot;: ${__RandomString(1,0123)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.code</stringProp>
              <stringProp name="EXPECTED_VALUE">200</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Get User by Username" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">60000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Generate Random Name" enabled="false">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def firstNames = [
    &quot;John&quot;, &quot;Emily&quot;, &quot;Michael&quot;, &quot;Sarah&quot;, &quot;David&quot;, &quot;Anna&quot;, &quot;Robert&quot;, &quot;Jessica&quot;,
    &quot;Daniel&quot;, &quot;Sophia&quot;, &quot;Matthew&quot;, &quot;Olivia&quot;, &quot;James&quot;, &quot;Ava&quot;, &quot;William&quot;, &quot;Mia&quot;,
    &quot;Ethan&quot;, &quot;Isabella&quot;, &quot;Alexander&quot;, &quot;Amelia&quot;, &quot;Benjamin&quot;, &quot;Harper&quot;, &quot;Lucas&quot;, &quot;Lily&quot;,
    &quot;Noah&quot;, &quot;Chloe&quot;, &quot;Mason&quot;, &quot;Ella&quot;, &quot;Logan&quot;, &quot;Grace&quot;, &quot;Henry&quot;, &quot;Victoria&quot;,
    &quot;Samuel&quot;, &quot;Hannah&quot;, &quot;Jacob&quot;, &quot;Natalie&quot;, &quot;Ryan&quot;, &quot;Zoe&quot;, &quot;Liam&quot;, &quot;Stella&quot;
]

def lastNames = [
    &quot;Smith&quot;, &quot;Johnson&quot;, &quot;Brown&quot;, &quot;Taylor&quot;, &quot;Anderson&quot;, &quot;Thomas&quot;, &quot;Jackson&quot;, &quot;White&quot;,
    &quot;Harris&quot;, &quot;Martin&quot;, &quot;Thompson&quot;, &quot;Garcia&quot;, &quot;Martinez&quot;, &quot;Robinson&quot;, &quot;Clark&quot;, &quot;Rodriguez&quot;,
    &quot;Lewis&quot;, &quot;Lee&quot;, &quot;Walker&quot;, &quot;Hall&quot;, &quot;Allen&quot;, &quot;Young&quot;, &quot;Hernandez&quot;, &quot;King&quot;,
    &quot;Wright&quot;, &quot;Lopez&quot;, &quot;Hill&quot;, &quot;Scott&quot;, &quot;Green&quot;, &quot;Adams&quot;, &quot;Baker&quot;, &quot;Nelson&quot;,
    &quot;Carter&quot;, &quot;Mitchell&quot;, &quot;Perez&quot;, &quot;Roberts&quot;, &quot;Turner&quot;, &quot;Phillips&quot;, &quot;Campbell&quot;, &quot;Parker&quot;
]

def rand = new Random()
def firstName = firstNames[rand.nextInt(firstNames.size())]
def lastName  = lastNames[rand.nextInt(lastNames.size())]
def fullName  = &quot;${firstName}${lastName}&quot;

vars.put(&quot;firstName&quot;, firstName)
vars.put(&quot;lastName&quot;, lastName)
vars.put(&quot;fullName&quot;, fullName)
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get User by Username" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/user/${fullName}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get User by Username" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/user/${fullName}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Update User" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Generate Random Name" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def firstNames = [
    &quot;John&quot;, &quot;Emily&quot;, &quot;Michael&quot;, &quot;Sarah&quot;, &quot;David&quot;, &quot;Anna&quot;, &quot;Robert&quot;, &quot;Jessica&quot;,
    &quot;Daniel&quot;, &quot;Sophia&quot;, &quot;Matthew&quot;, &quot;Olivia&quot;, &quot;James&quot;, &quot;Ava&quot;, &quot;William&quot;, &quot;Mia&quot;,
    &quot;Ethan&quot;, &quot;Isabella&quot;, &quot;Alexander&quot;, &quot;Amelia&quot;, &quot;Benjamin&quot;, &quot;Harper&quot;, &quot;Lucas&quot;, &quot;Lily&quot;,
    &quot;Noah&quot;, &quot;Chloe&quot;, &quot;Mason&quot;, &quot;Ella&quot;, &quot;Logan&quot;, &quot;Grace&quot;, &quot;Henry&quot;, &quot;Victoria&quot;,
    &quot;Samuel&quot;, &quot;Hannah&quot;, &quot;Jacob&quot;, &quot;Natalie&quot;, &quot;Ryan&quot;, &quot;Zoe&quot;, &quot;Liam&quot;, &quot;Stella&quot;
]

def lastNames = [
    &quot;Smith&quot;, &quot;Johnson&quot;, &quot;Brown&quot;, &quot;Taylor&quot;, &quot;Anderson&quot;, &quot;Thomas&quot;, &quot;Jackson&quot;, &quot;White&quot;,
    &quot;Harris&quot;, &quot;Martin&quot;, &quot;Thompson&quot;, &quot;Garcia&quot;, &quot;Martinez&quot;, &quot;Robinson&quot;, &quot;Clark&quot;, &quot;Rodriguez&quot;,
    &quot;Lewis&quot;, &quot;Lee&quot;, &quot;Walker&quot;, &quot;Hall&quot;, &quot;Allen&quot;, &quot;Young&quot;, &quot;Hernandez&quot;, &quot;King&quot;,
    &quot;Wright&quot;, &quot;Lopez&quot;, &quot;Hill&quot;, &quot;Scott&quot;, &quot;Green&quot;, &quot;Adams&quot;, &quot;Baker&quot;, &quot;Nelson&quot;,
    &quot;Carter&quot;, &quot;Mitchell&quot;, &quot;Perez&quot;, &quot;Roberts&quot;, &quot;Turner&quot;, &quot;Phillips&quot;, &quot;Campbell&quot;, &quot;Parker&quot;
]

def rand = new Random()
def firstName = firstNames[rand.nextInt(firstNames.size())]
def lastName  = lastNames[rand.nextInt(lastNames.size())]
def fullName2  = &quot;${firstName}${lastName}&quot;

vars.put(&quot;firstName&quot;, firstName)
vars.put(&quot;lastName&quot;, lastName)
vars.put(&quot;fullName&quot;, fullName)
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update User" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: 0,&#xd;
  &quot;username&quot;: &quot;${fullName}&quot;,&#xd;
  &quot;firstName&quot;: &quot;${firstName}&quot;,&#xd;
  &quot;lastName&quot;: &quot;${lastName}&quot;,&#xd;
  &quot;email&quot;: &quot;${fullName}@mail.com&quot;,&#xd;
  &quot;password&quot;: &quot;123123!&quot;,&#xd;
  &quot;phone&quot;: &quot;80192312903&quot;,&#xd;
  &quot;userStatus&quot;: ${__RandomString(1,0123)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/user/${fullName}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.code</stringProp>
              <stringProp name="EXPECTED_VALUE">200</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
